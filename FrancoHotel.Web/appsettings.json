{
    "Logging": {
        "LogLevel": {
            "Default": "Information",
            "Microsoft.AspNetCore": "Warning"
        }
    },
    "AllowedHosts": "*",
    "ConnectionStrings": {
        "DBHotelYoelmi": "Server=NACER\\SQLEXPRESS;Database=DBHotel;Integrated Security=True;TrustServerCertificate=True;MultipleActiveResultSets=true",
        "DBHotelGerardo": "Server=DESKTOP-7789H4V\\SQLEXPRESS;Database=DBHotel;Integrated Security=True;TrustServerCertificate=True;MultipleActiveResultSets=true",
        "DbHotelEli": "Server=DESKTOP-PSE76N1;Database=DBHotel;Integrated Security=True;TrustServerCertificate=True;MultipleActiveResultSets=true"
    },
    "ErrorPisoRepository": {
        "GetPisoByEstado": "Error obteniendo los pisos por estado",
        "InvalidData": "Los datos del piso no son válidos",
        "RemoveEntityAsync": "Ocurrio un error al remover el piso",
        "SaveEntityAsync": "Ocurrio un error al guardar el piso",
        "UpdateEntityAsync": "Ocurrio un error al actualizar el piso"
    },
    "ErrorPisoService": {
        "EntityHasReservations": "El piso no se puede remover porque tiene reservas activas",
        "EntityNotFound": "No se pudo encontrar el piso para remover",
        "Update": "El piso a modificar no está registrado"
    },
    "ErrorHabitacionRepository": {
        "RemoveEntityAsync": "Ocurrio un error al remover la habitación",
        "SaveEntityAsync": "Ocurrio un error al guardar la habitación",
        "UpdateEntityAsync": "Ocurrio un error al actualizar la habitación",
        "InvalidData": "Los datos de la habitación no son válidos"
    },
    "ErrorEstadoHabitacionRepository": {
        "RemoveEntityAsync": "Ocurrio un error al remover el estado de habitación",
        "SaveEntityAsync": "Ocurrio un error al guardar el estado de habitación",
        "UpdateEntityAsync": "Ocurrio un error al actualizar el estado de habitación",
        "InvalidData": "Los datos de el estado de habitación no son válidos"
    },
    "ErrorServiciosRepository": {
        "RemoveEntityAsync": "Ocurrio un error al remover el servicio",
        "SaveEntityAsync": "Ocurrio un error al guardar el servicio",
        "UpdateEntityAsync": "Ocurrio un error al actualizar el servicio",
        "InvalidData": "Los datos de el servicio no son válidos"
    },
    "ErrorUsuarioRepository": {
        "InvalidData": "Datos inválidos para la operación en UsuarioRepository",
        "SaveEntityAsync": "Error al guardar el usuario",
        "UpdateEntityAsync": "Error al actualizar el usuario",
        "RemoveEntity": "Error al eliminar el usuario",
        "GetUsuarioById": "Error obteniendo el usuario por ID",
        "GetAllUsuarios": "Error obteniendo la lista de usuarios"
    },
    "ErrorRolUsuarioRepository": {
        "InvalidData": "Datos inválidos para la operación en RolUsuarioRepository",
        "SaveEntityAsync": "Error al guardar el rol de usuario",
        "UpdateEntityAsync": "Error al actualizar el rol de usuario",
        "RemoveEntity": "Error al eliminar el rol de usuario",
        "GetRolUsuarioById": "Error obteniendo el rol de usuario por ID",
        "GetAllRolesUsuario": "Error obteniendo la lista de roles de usuario"
    },
    "ErrorClienteRepository": {
        "InvalidData": "Datos inválidos para la operación en ClienteRepository",
        "SaveEntityAsync": "Error al guardar el cliente",
        "UpdateEntityAsync": "Error al actualizar el cliente",
        "RemoveEntity": "Error al eliminar el cliente",
        "GetClienteById": "Error obteniendo el cliente por ID",
        "GetAllClientes": "Error obteniendo la lista de clientes"
    },
    "ErrorUsuarioService": {
        "CreateUsuario": "Error al crear un nuevo usuario en el servicio",
        "UpdateUsuario": "Error al actualizar el usuario en el servicio",
        "DeleteUsuario": "Error al eliminar el usuario en el servicio",
        "GetUsuario": "Error al obtener el usuario en el servicio"
    },
    "ErrorRolUsuarioService": {
        "CreateRolUsuario": "Error al crear un nuevo rol de usuario en el servicio",
        "UpdateRolUsuario": "Error al actualizar el rol de usuario en el servicio",
        "DeleteRolUsuario": "Error al eliminar el rol de usuario en el servicio",
        "GetRolUsuario": "Error al obtener el rol de usuario en el servicio"
    },
    "ErrorClienteService": {
        "CreateCliente": "Error al crear un nuevo cliente en el servicio",
        "UpdateCliente": "Error al actualizar el cliente en el servicio",
        "DeleteCliente": "Error al eliminar el cliente en el servicio",
        "GetCliente": "Error al obtener el cliente en el servicio"
    }
}
